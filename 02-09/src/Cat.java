
import java.util.Random;

public class Cat
{
    private final String nick;
    private int hungry;     // 0 - —Å–∏—Ç–∏–π, 100 - –≥–æ–ª–æ–¥–Ω–∏–π
    private int energy;     // 0 - –≤–∏—Å–Ω–∞–∂–µ–Ω–∏–π, 100 - –±–∞–¥—å–æ—Ä–∏–π
    private int happiness;  // 0 - —Å—É–º–Ω–∏–π, 100 - —â–∞—Å–ª–∏–≤–∏–π
    private boolean alive = true;

    private final Random rand = new Random();

    // ==== –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ====
    public Cat(String nick) {
        this.nick = nick;
        this.hungry = 40;
        this.energy = 70;
        this.happiness = 70;
    }

    // ==== –ú–µ—Ç–æ–¥–∏ ====
    public void play() {
        if (!alive) return;
        if (hungry >= 90) {
            System.out.println(nick + " –∑–∞–Ω–∞–¥—Ç–æ –≥–æ–ª–æ–¥–Ω–∏–π, —â–æ–± –≥—Ä–∞—Ç–∏—Å—è.");
            return;
        }
        if (energy <= 20) {
            System.out.println(nick + " –∑–∞–Ω–∞–¥—Ç–æ –≤—Ç–æ–º–∏–≤—Å—è –¥–ª—è —ñ–≥–æ—Ä.");
            return;
        }
        System.out.println(nick + " –≤–µ—Å–µ–ª–æ –≥–∞–Ω—è—î—Ç—å—Å—è –∑–∞ –∫–ª—É–±–æ—á–∫–æ–º üß∂");
        energy -= 20;
        hungry += 15;
        happiness = Math.min(100, happiness + 20);
    }

    public void sleep() {
        if (!alive) return;
        System.out.println(nick + " –∑–∞—Å–Ω—É–≤ —ñ —Å–æ–ª–æ–¥–∫–æ –º—É—Ä—á–∏—Ç—å üò¥");
        energy = 100;
        hungry = Math.min(100, hungry + 15);
        happiness = Math.max(0, happiness - 5);
    }

    public void eat() {
        if (!alive) return;
        System.out.println(nick + " —ó—Å—Ç—å –∫–æ—Ä–º üçñ —ñ –º—É—Ä—á–∏—Ç—å.");
        hungry = 0;
        energy = Math.min(100, energy + 15);
        happiness = Math.min(100, happiness + 10);
    }

    public void hunt() {
        if (!alive) return;
        System.out.println(nick + " –ø–æ–ª—é—î –Ω–∞ —ñ–≥—Ä–∞—à–∫–æ–≤—É –º–∏—à–∫—É üê≠...");
        energy = Math.max(0, energy - 10);
        hungry = Math.min(100, hungry + 5);

        if (rand.nextBoolean()) {
            System.out.println("–£—Å–ø—ñ—Ö! " + nick + " —Å–ø—ñ–π–º–∞–≤ –º–∏—à–∫—É!");
            happiness = Math.min(100, happiness + 15);
        } else {
            System.out.println("–ú–∏—à–∫–∞ –≤—Ç–µ–∫–ª–∞... " + nick + " —Å—É–º—É—î üòø");
            happiness = Math.max(0, happiness - 5);
        }
    }

    public void wash() {
        if (!alive) return;
        System.out.println(nick + " –≤–∏–ª–∏–∑—É—î —à–µ—Ä—Å—Ç—å üßº");
        happiness = Math.min(100, happiness + 5);
        energy = Math.max(0, energy - 5);
    }

    public void liveOneCycle() {
        if (hungry > 80) {
            eat();
        } else if (energy < 30) {
            sleep();
        } else {
            int action = rand.nextInt(3);
            switch (action) {
                case 0 -> play();
                case 1 -> hunt();
                case 2 -> wash();
            }
        }
        normalizeStats();
    }

    private void normalizeStats() {
        hungry = Math.max(0, Math.min(100, hungry));
        energy = Math.max(0, Math.min(100, energy));
        happiness = Math.max(0, Math.min(100, happiness));
    }

    public void printStatus() {
        System.out.println("\n---- –°—Ç–∞—Ç—É—Å –∫–æ—Ç–∞ ----");
        System.out.println("–Ü–º'—è      : " + nick);
        System.out.println("–ì–æ–ª–æ–¥     : " + bar(hungry));
        System.out.println("–ï–Ω–µ—Ä–≥—ñ—è   : " + bar(energy));
        System.out.println("–©–∞—Å—Ç—è     : " + bar(happiness));
        System.out.println("---------------------\n");
    }

    private String bar(int value) {
        int filled = value / 10;
        int empty = 10 - filled;
        return "[" + "‚ñà".repeat(filled) + " ".repeat(empty) + "] " + value + "%";
    }

    public String getNick() {
        return nick;
    }
}
