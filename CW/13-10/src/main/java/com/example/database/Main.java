package com.example.database;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;

public class Main {

    private static final String DB_URL = "jdbc:oracle:thin:@localhost:1521:FREE";
    private static final String USER = "SYS AS SYSDBA";
    private static final String PASSWORD = "eli301186";

    public static void main(String[] args) {
        createTable();
        insertData();
        updateData();
        queryData();
    }

    private static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(DB_URL, USER, PASSWORD);
    }

    private static void createTable() {
        String checkTableSql = "BEGIN " + "  EXECUTE IMMEDIATE 'CREATE TABLE Eli_Users "
                + "    (id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " + "     name VARCHAR2(50), "
                + "     age NUMBER)'; " + "EXCEPTION " + "  WHEN OTHERS THEN " + "    IF SQLCODE != -955 THEN "
                + "      RAISE; " + "    END IF; " + "END;";

        executeUpdate(checkTableSql, "Таблиця успішно створена (або вже існує)...");
    }

    private static void insertData() {
        String sql = "INSERT INTO Eli_Users (name, age) VALUES ('Григорій Сковорода', 30)";
        executeUpdate(sql, "Дані успішно додані до таблиці.");
    }

    private static void updateData() {
        String sql = "UPDATE Eli_Users SET age = 31 WHERE name = 'Григорій Сковорода'";
        executeUpdate(sql, "Дані успішно оновлені.");
    }

    private static void queryData() {
        String sql = "SELECT id, name, age FROM Eli_Users";

        try (Connection conn = getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("name");
                int age = rs.getInt("age");

                System.out.println("ID: " + id + ", Ім'я: " + name + ", Вік: " + age);
            }
        } catch (SQLException e) {
            throw new RuntimeException("Помилка при запиті даних: " + e.getMessage(), e);
        }
    }

    private static void executeUpdate(String sql, String successMessage) {
        try (Connection conn = getConnection(); Statement stmt = conn.createStatement()) {

            stmt.executeUpdate(sql);
            System.out.println(successMessage);

        } catch (SQLException e) {
            throw new RuntimeException("Помилка при виконанні запиту: " + e.getMessage(), e);
        }
    }
}